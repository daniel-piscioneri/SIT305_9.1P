package com.example.a71p;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.Toast;import androidx.activity.result.ActivityResultLauncher;import androidx.activity.result.contract.ActivityResultContracts;import androidx.annotation.NonNull;import androidx.appcompat.widget.Toolbar;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import com.google.android.gms.common.api.Status;import com.google.android.gms.maps.model.LatLng;import com.google.android.libraries.places.api.Places;import com.google.android.libraries.places.api.model.Place;import com.google.android.libraries.places.api.net.PlacesClient;import com.google.android.libraries.places.widget.Autocomplete;import com.google.android.libraries.places.widget.AutocompleteSupportFragment;import com.google.android.libraries.places.widget.listener.PlaceSelectionListener;import com.google.android.libraries.places.widget.model.AutocompleteActivityMode;import java.util.Arrays;import java.util.List;public class CreateActivity extends AppCompatActivity {    EditText Name, Phone, Desc, Date, Location;    RadioGroup posttype;    Button Save;    MyDatabaseHelper myDB;    LatLng selectedLocation;//    private final ActivityResultLauncher<Intent> startAutocomplete = registerForActivityResult(//            new ActivityResultContracts.StartActivityForResult(),//            result -> {//                if (result.getResultCode()== Activity.RESULT_OK) {//                    Intent intnet = result.getData();//                    if (intnet != null) {//                        Place place = Autocomplete.getPlaceFromIntent(intnet);//                        //Log.i(...)//                    }//                } else if (result.getResultCode() == Activity.RESULT_CANCELED){//                    //Log.i(TAG, "User canceled autocomplete");//                }//            }//    );    @Override    protected void onCreate( Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_create);        Places.initialize(getApplicationContext(), "AIzaSyASUMb_UECTd7uDuIB-W_5NOcGLD42VNXY");        PlacesClient placesClient = Places.createClient(this);        Toolbar tool = findViewById(R.id.toolbar);        setSupportActionBar(tool);        if (getSupportActionBar() != null) {            getSupportActionBar().setDisplayHomeAsUpEnabled(true);            getSupportActionBar().setDisplayShowHomeEnabled(true);        }        Name = findViewById(R.id.editTextText);        Phone = findViewById(R.id.editTextText2);        Desc = findViewById(R.id.editTextText3);        Date = findViewById(R.id.editTextText4);        Location = findViewById(R.id.editTextText5);        posttype = findViewById(R.id.posttype);        Save = findViewById(R.id.button3);        myDB = new MyDatabaseHelper(this);        AutocompleteSupportFragment autocompleteFragment = (AutocompleteSupportFragment)            getSupportFragmentManager().findFragmentById(R.id.autocomplete_fragment);        List<Place.Field> fields = Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.LAT_LNG);        autocompleteFragment.setPlaceFields(fields);        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {            @Override            public void onError(@NonNull Status status) {                Toast.makeText(CreateActivity.this, "Error: " +status.getStatusMessage(),Toast.LENGTH_SHORT).show();            }            @Override            public void onPlaceSelected(@NonNull Place place) {                Location.setText(place.getName());                String locationName = place.getName();                LatLng locationLatLng = place.getLatLng();                selectedLocation = place.getLatLng();                if (locationLatLng != null) {                    Log.e("LatLng", "Lat: " + locationLatLng.latitude + "lng: " + locationLatLng.longitude);                    Intent intent = new Intent(CreateActivity.this, MapsActivity.class);                    intent.putExtra("locationName", locationName);                    intent.putExtra("locationLatLng", locationLatLng);////                    startActivity(intent);                    Log.e("LatLng", locationLatLng.toString());//                    selectedLocation.latitude = locationLatLng.latitude;                } else {                    Log.e("LATLNG", "Location is null");                }            }        });//        List<Place.Field> fields = Arrays.asList(Place.Field.ID, Place.Field.NAME);////        Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.OVERLAY, fields).build(this);//        startAutocomplete.launch(intent);        Save.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                int SelectedId = posttype.getCheckedRadioButtonId();                RadioButton selectedbutton = findViewById(SelectedId);                String postYpe = selectedbutton.getText().toString();                if (selectedLocation != null)                {                    boolean isInserted = myDB.insertItem(postYpe, Name.getText().toString(), Phone.getText().toString(), Desc.getText().toString(), Date.getText().toString(), Location.getText().toString(), selectedLocation.latitude, selectedLocation.longitude);                    if (isInserted){                        Toast.makeText(CreateActivity.this, "Data Created", Toast.LENGTH_SHORT).show();                    } else{                        Toast.makeText(CreateActivity.this, "Data unable to be Created", Toast.LENGTH_SHORT).show();                    }                } else {                    Toast.makeText(CreateActivity.this, "Error: Selected Location is null", Toast.LENGTH_SHORT).show();                }            }        });    }    @Override    public boolean onOptionsItemSelected(MenuItem item)    {        if (item.getItemId() == android.R.id.home){            finish();            return true;        }        return super.onOptionsItemSelected(item);    }}package com.example.a71p;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.Button;import androidx.activity.EdgeToEdge;import androidx.appcompat.app.AppCompatActivity;import androidx.core.graphics.Insets;import androidx.core.view.ViewCompat;import androidx.core.view.WindowInsetsCompat;public class MainActivity extends AppCompatActivity {    Button Create, Show, Map;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        EdgeToEdge.enable(this);        setContentView(R.layout.activity_main);        Create = findViewById(R.id.button);        Show = findViewById(R.id.button2);        Map = findViewById(R.id.map);        Create.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, CreateActivity.class);                startActivity(intent);            }        });        Show.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, ShowActivity.class);                startActivity(intent);            }        });        Map.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, MapsActivity.class);                startActivity(intent);            }        });    }}package com.example.a71p;import androidx.fragment.app.FragmentActivity;import android.content.Intent;import android.database.Cursor;import android.os.Bundle;import android.util.Log;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;import com.example.a71p.databinding.ActivityMapsBinding;public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {    private GoogleMap mMap;    private ActivityMapsBinding binding;    private LatLng locationLatLng;    private String locationName;    LatLng locationlatlng;    MyDatabaseHelper myDB;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        binding = ActivityMapsBinding.inflate(getLayoutInflater());        setContentView(binding.getRoot());        myDB = new MyDatabaseHelper(this);//        Intent intent = getIntent();//        if (intent != null) {//            locationName = intent.getStringExtra("locationName");//            locationLatLng = intent.getParcelableExtra("locationLatLng");//            setTitle(locationName);//////        }        // Obtain the SupportMapFragment and get notified when the map is ready to be used.        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()                .findFragmentById(R.id.map);        mapFragment.getMapAsync(this);    }    /**     * Manipulates the map once available.     * This callback is triggered when the map is ready to be used.     * This is where we can add markers or lines, add listeners or move the camera. In this case,     * we just add a marker near Sydney, Australia.     * If Google Play services is not installed on the device, the user will be prompted to install     * it inside the SupportMapFragment. This method will only be triggered once the user has     * installed Google Play services and returned to the app.     */    @Override    public void onMapReady(GoogleMap googleMap) {        mMap = googleMap;        // Add a marker in Sydney and move the camera//        LatLng sydney = new LatLng(-34, 151);//        mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));//        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));        Cursor cursor = myDB.getAllItems();        if (cursor != null && cursor.moveToFirst()){            do{                String name = cursor.getString(cursor.getColumnIndexOrThrow(MyDatabaseHelper.COLUMN_NAME));                double lat = cursor.getDouble(cursor.getColumnIndexOrThrow(MyDatabaseHelper.COLUMN_LATITUDE));                double lng = cursor.getDouble(cursor.getColumnIndexOrThrow(MyDatabaseHelper.COLUMN_LONGITUDE));                Log.e("LATLNG", "LAT: "+ lat + " LNG: " + lng);                locationlatlng = new LatLng(lat,lng);                Log.e("LcationLATLNG", locationlatlng.toString());                mMap.addMarker(new MarkerOptions().position(locationlatlng).title(name));                mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(locationlatlng, 10));            }while (cursor.moveToNext());            cursor.close();        }//        if (locationlatlng != null){//            mMap.addMarker(new MarkerOptions().position(locationlatlng).title(MyDatabaseHelper.COLUMN_NAME));//            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(locationlatlng, 10));//        }    }}package com.example.a71p;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;public class MyDatabaseHelper extends SQLiteOpenHelper {    private static final String DATABASE_NAME = "lostfound1.db";    private static final int DATABASE_VERSION = 1;    public static final String TABLE_NAME = "items";    public static final String COLUMN_ID = "_id";    public static final String COLUMN_POSTTYPE = "post_type";    public static final String COLUMN_NAME = "name";    public static final String COLUMN_PHONE = "phone";    public static final String COLUMN_DESC = "desc";    public static final String COLUMN_LOCATION = "location";    public static final String COLUMN_DATE = "date";    public static final String COLUMN_LATITUDE = "latitude"; // New column for latitude    public static final String COLUMN_LONGITUDE = "longitude";    public MyDatabaseHelper( Context context){        super(context, DATABASE_NAME, null, DATABASE_VERSION);    }    public boolean insertItem(String postYpe, String string, String string1,                              String string2, String string3, String string4, double latitude, double longitude) {        SQLiteDatabase db = this.getWritableDatabase();        ContentValues contentValues = new ContentValues();        contentValues.put(COLUMN_POSTTYPE, postYpe);        contentValues.put(COLUMN_NAME, string);        contentValues.put(COLUMN_PHONE, string1);        contentValues.put(COLUMN_DESC,string2);        contentValues.put(COLUMN_DATE, string3);        contentValues.put(COLUMN_LOCATION,string4);        contentValues.put(COLUMN_LATITUDE, latitude); // Insert latitude        contentValues.put(COLUMN_LONGITUDE, longitude);        long result = db.insert(TABLE_NAME, null, contentValues);        return result != -1;    }    @Override    public void onCreate(SQLiteDatabase db) {        String createTable = "CREATE TABLE " + TABLE_NAME + " (" + COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +                COLUMN_POSTTYPE + " TEXT, " + COLUMN_NAME + " TEXT, " + COLUMN_PHONE + " TEXT, " + COLUMN_DESC + " TEXT, " +                COLUMN_LOCATION + " TEXT, " + COLUMN_DATE + " TEXT, " + COLUMN_LATITUDE + " REAL, " + COLUMN_LONGITUDE + " REAL)";        db.execSQL(createTable);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);        onCreate(db);    }    public Cursor getAllItems(){        SQLiteDatabase db = this.getReadableDatabase();        return db.rawQuery("SELECT * FROM " + TABLE_NAME, null);    }    public Integer deleteItem(String id){        SQLiteDatabase db = this.getWritableDatabase();        return db.delete(TABLE_NAME, COLUMN_ID +" = ?", new String[]{id});    }}package com.example.a71p;import android.content.Intent;import android.database.Cursor;import android.os.Bundle;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.ListView;import android.widget.Toast;import androidx.appcompat.widget.Toolbar;import androidx.appcompat.app.AppCompatActivity;import java.util.ArrayList;public class ShowActivity extends AppCompatActivity {    ListView listView;    MyDatabaseHelper myDB;    ArrayList<Integer> itemids;    ArrayList<String> list;    ArrayAdapter<String> totallist;    @Override    protected void onCreate( Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_show);        Toolbar toolbar2 = findViewById(R.id.toolbar2);        setSupportActionBar(toolbar2);        if (getSupportActionBar() != null){            getSupportActionBar().setDisplayHomeAsUpEnabled(true);            getSupportActionBar().setDisplayShowHomeEnabled(true);        }        listView = findViewById(R.id.listview);        myDB = new MyDatabaseHelper(this);        list = new ArrayList<>();        itemids = new ArrayList<>();        viewData();        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                int itemId = itemids.get(position);                String itemDetails = list.get(position);                Intent intent = new Intent(ShowActivity.this, ShowItemActivity.class);                intent.putExtra("ITEM_ID", itemId);                intent.putExtra("ITEM_DETAILS", itemDetails);                startActivity(intent);            }        });    }    private void viewData() {        Cursor Cursor = myDB.getAllItems();        if (Cursor.getCount()==0){            Toast.makeText(this, "No data to display", Toast.LENGTH_SHORT).show();        } else {            while (Cursor.moveToNext())            {                itemids.add(Cursor.getInt(0));                list.add(Cursor.getString(1)+" " + Cursor.getString(2)+" " + Cursor.getString(3)+" " + Cursor.getString(4)+" " + Cursor.getString(5));            }            totallist = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, list);            listView.setAdapter(totallist);        }    }    public boolean onOptionsItemSelected(MenuItem item){        if (item.getItemId()==android.R.id.home){            finish();            return true;        }        return super.onOptionsItemSelected(item);    }}package com.example.a71p;import android.os.Bundle;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;public class ShowItemActivity extends AppCompatActivity {    TextView name, date, location;    Button remove;    MyDatabaseHelper myDB;    int itemId;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_item_single);        name = findViewById(R.id.textView);        remove = findViewById(R.id.removebtn);        myDB = new MyDatabaseHelper(this);        itemId = getIntent().getIntExtra("ITEM_ID", -1);        String itemdetails = getIntent().getStringExtra("ITEM_DETAILS");        name.setText(itemdetails);        remove.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Integer rows = myDB.deleteItem(String.valueOf(itemId));                if (rows > 0){                    Toast.makeText(ShowItemActivity.this, "Item is Removed", Toast.LENGTH_SHORT).show();                    finish();                } else {                    Toast.makeText(ShowItemActivity.this, "Item is not Removed", Toast.LENGTH_SHORT).show();                }            }        });    }//    @Override//    public boolean onOptionsItemSelected(MenuItem item) {//        if (item.getItemId() == android.R.id.home)//        {//            finish();//            return true;//        }//        return super.onOptionsItemSelected(item);//    }}<?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"    xmlns:tools="http://schemas.android.com/tools"    android:layout_width="match_parent"    android:layout_height="match_parent"    xmlns:app="http://schemas.android.com/apk/res-auto"    android:orientation="vertical">    <androidx.appcompat.widget.Toolbar        android:id="@+id/toolbar"        android:layout_width="match_parent"        android:layout_height="?attr/actionBarSize"        android:background="?attr/colorPrimary"        android:theme="?attr/actionBarTheme"        android:popupTheme="@style/Theme.AppCompat.Light"        />    <RadioGroup        android:layout_width="match_parent"        android:id="@+id/posttype"        android:layout_height="wrap_content"        android:orientation="horizontal"        android:layout_marginTop="16dp"        >        <RadioButton            android:id="@+id/lost"            android:layout_width="wrap_content"            android:layout_height="wrap_content"            android:text="Lost"            android:checked="true"/>        <RadioButton            android:layout_width="wrap_content"            android:layout_height="wrap_content"            android:text="Found"            android:id="@+id/found"/>    </RadioGroup>    <EditText        android:id="@+id/editTextText"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:ems="10"        android:inputType="text"        android:hint="Name" />    <EditText        android:id="@+id/editTextText2"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:ems="10"        android:inputType="text"        android:hint="Phone" />    <EditText        android:id="@+id/editTextText3"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:ems="10"        android:inputType="text"        android:hint="Desc" />    <EditText        android:id="@+id/editTextText4"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:ems="10"        android:inputType="text"        android:hint="Date" />    <EditText        android:id="@+id/editTextText5"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:ems="10"        android:inputType="text"        android:hint="Location" />    <fragment        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:id="@+id/autocomplete_fragment"        android:name="com.google.android.libraries.places.widget.AutocompleteSupportFragment"/>    <Button        android:id="@+id/button3"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="Save" /></LinearLayout><?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"    android:layout_width="match_parent"    android:layout_height="match_parent"    android:orientation="vertical">    <TextView        android:id="@+id/textView"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="TextView" />    <TextView        android:id="@+id/textView2"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="TextView" />    <TextView        android:id="@+id/textView3"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="TextView" />    <Button        android:id="@+id/removebtn"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="remove" /></LinearLayout><?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"    android:layout_width="match_parent"    android:layout_height="match_parent"    android:orientation="vertical"    android:padding="16dp">    <Button        android:id="@+id/button"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="Create"        android:layout_marginBottom="16dp"        />    <Button        android:id="@+id/button2"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="Show"        android:layout_marginBottom="16dp"/>    <Button        android:id="@+id/map"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:text="Show on Map" /></LinearLayout><?xml version="1.0" encoding="utf-8"?><RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"    android:layout_width="match_parent"    android:layout_height="match_parent">    <fragment        android:id="@+id/map"        android:name="com.google.android.gms.maps.SupportMapFragment"        android:layout_width="match_parent"        android:layout_height="match_parent"/></RelativeLayout><?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"    android:layout_width="match_parent"    android:layout_height="match_parent"    android:orientation="vertical"    android:padding="16dp"    >    <androidx.appcompat.widget.Toolbar        android:id="@+id/toolbar2"        android:layout_width="match_parent"        android:layout_height="wrap_content"        android:background="?attr/colorPrimary"        android:minHeight="?attr/actionBarSize"        android:theme="?attr/actionBarTheme" />    <ListView        android:layout_width="match_parent"        android:layout_height="match_parent"        android:id="@+id/listview"/></LinearLayout>